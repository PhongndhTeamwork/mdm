definitions:
  dtos.AuthResponse:
    properties:
      token:
        type: string
    type: object
  dtos.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  dtos.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dtos.RegisterRequest:
    properties:
      confirm_password:
        minLength: 6
        type: string
      email:
        type: string
      name:
        maxLength: 20
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
    required:
    - confirm_password
    - email
    - name
    - password
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: User login data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Login account
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Register a new user
      tags:
      - Auth
  /user/update-info:
    post:
      consumes:
      - multipart/form-data
      description: Updates the user's profile information, including name, bio, and
        avatar
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: 'User''s name (min: 2, max: 20)'
        in: formData
        name: name
        type: string
      - description: 'User''s bio (min: 12 characters)'
        in: formData
        name: bio
        type: string
      - description: User's member number
        in: formData
        name: member_number
        type: string
      - description: User's avatar image
        in: formData
        name: avatar
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: User info updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update user information
      tags:
      - User
swagger: "2.0"
